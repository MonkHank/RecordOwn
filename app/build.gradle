//import groovy.xml.MarkupBuilder

plugins {
  id 'com.android.application'
}

apply from: '../dependencies.gradle' /* ../ 是当前目录的上一级目录*/

android {
  defaultConfig {
    applicationId "com.monk.aidldemo"
    versionCode 4
    versionName "1.0.1"
    multiDexEnabled true


    // Filter for architectures supported by Flutter.
    ndk {
      abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
    }
  }

  externalNativeBuild {
    cmake {
      path "src/main/cpp/CMakeLists.txt"
    }
  }

  sourceSets {
    main {
      // 修改so库存放位置
      jniLibs.srcDirs = ['libs']
      println("------------------line 33 excuted:${res.srcDirs}------------")
    }
  }
  sourceSets {
    main {
      res.srcDirs = ['src/main/res', 'src/main/res-ad', 'src/main/res-player']
      println("------------------line 39 excuted:${res.srcDirs}------------")
    }
  }

}
this.android.sourceSets {
  main {
    res.srcDirs = ['src/main/res', 'src/main/res-ad', 'src/main/res-player']
    println("------------------line 47 excuted:${res.srcDirs}------------")
  }
}

dependencies {
  implementation project(path: ':module_basic')
  if (!singleModule.toBoolean()) {
    implementation project(path: ':module_home')
    implementation project(path: ':module_fragment')
//    implementation project(path: ':module_gl')
  }

  // 编译时期注解，执行到此处时，就会去生成相关注解处理类
//    annotationProcessor project(path: ':annotationprocessor')
//    implementation project(path: ':module_basic')

}

// 对文件数进行遍历
fileTree('build/outputs/apk') { FileTree fileTree ->
  fileTree.visit { FileTreeElement element ->
    println "the file name is ${element.file.name}"
    copy {
      from element.file into getRootProject().getBuildDir().path + '/test/'
    }
  }
}